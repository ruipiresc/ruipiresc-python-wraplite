# This workflows will build a python package, create a release and upload the package
# For more information see: https://github.com/actions/create-release and https://github.com/actions/upload-release-asset

name: CI CD action

on:
  push:
    tag:
      - 'v*'
      
jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Publish python package
        run: |
          python setup.py publish
      - name: Create Release
        if: ${{ contains(github.ref, 'dev') == false }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Create Prerelease
        if: ${{ contains(github.ref, 'dev') == true }}
        id: create_prerelease
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        if: ${{ contains(github.ref, 'dev') == false }}
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_prerelease.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/wraplite-${{ github.ref }}-py3-none-any.whl
          asset_name: wraplite-${{ github.ref }}-py3-none-any.whl
          asset_content_type: application/zip
      - name: Upload Prerelease Asset
        if: ${{ contains(github.ref, 'dev') == true }}
        id: upload-prerelease-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_prerelease.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/wraplite-${{ github.ref }}-py3-none-any.whl
          asset_name: wraplite-${{ github.ref }}-py3-none-any.whl
          asset_content_type: application/zip
