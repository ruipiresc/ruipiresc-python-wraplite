# This workflows will build a python package, create a release and upload the package
# For more information see: https://github.com/actions/create-release and https://github.com/actions/upload-release-asset

name: CI CD action

on:
  push:
    tags:
      - 'v*'
      
jobs:
  build:
    name: CI CD action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Publish python package
        run: |
          python setup.py publish
      - name: Get python package version
        id: get_version
        uses: battila7/get-version-action@v2
      - name: Prepare artifact
        id: prepare_artifact
        run: |
          echo $PWD
          echo ::set-output name=artifact_path::./dist/wraplite-${{ steps.get_version.outputs.version-without-v }}-py3-none-any.whl
          echo ::set-output name=artifact_name::wraplite-${{ steps.get_version.outputs.version-without-v }}-py3-none-any.whl
          echo ::set-output name=artifact_type::application/zip
          echo ls
          cd dist
          echo ls
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release of version ${{ steps.get_version.outputs.version-without-v }}
          draft: false
          prerelease: ${{ contains(github.ref, 'dev') == true }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.prepare_artifact.outputs.artifact_path }}
          asset_name: ${{ steps.prepare_artifact.outputs.artifact_name }}
          asset_content_type: ${{ steps.prepare_artifact.outputs.artifact_type }}
